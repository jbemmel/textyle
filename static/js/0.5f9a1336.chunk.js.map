{"version":3,"sources":["tilemap/pkg/tilemap_bg.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","Layer","this","__destroy_into_raw","x","y","value","obj","Object","create","prototype","width","height","tile_width","tile_height","__wrap","Tilemap","tile_size","layer_id","__wbg_new_59cb74e423758ede","addHeapObject","Error","__wbg_stack_558ba5917b466edd","arg0","arg1","ptr0","malloc","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","stack","len0","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","__wbindgen_throw"],"mappings":"igBAEMA,EAAO,IAAIC,MAAM,IAAIC,UAAKC,GAIhC,SAASC,EAAUC,GAAO,OAAOL,EAAKK,GAFtCL,EAAKM,UAAKH,EAAW,MAAM,GAAM,GAIjC,IAAII,EAAYP,EAAKQ,OAQrB,SAASC,EAAWJ,GAChB,IAAMK,EAAMN,EAAUC,GAEtB,OATJ,SAAoBA,GACZA,EAAM,KACVL,EAAKK,GAAOE,EACZA,EAAYF,GAKZM,CAAWN,GACJK,EAGX,IAEIE,EAAoB,IAFoB,qBAAhBC,aAA8B,EAAIC,EAAOC,SAAS,QAAQF,YAAcA,aAE3D,QAAS,CAAEG,WAAW,EAAMC,OAAO,IAE5EL,EAAkBM,SAElB,IAAIC,EAAuB,KAC3B,SAASC,IAIL,OAH6B,OAAzBD,GAAiCA,EAAqBE,SAAWC,IAAYD,SAC7EF,EAAuB,IAAII,WAAWD,IAAYD,SAE/CF,EAGX,SAASK,EAAmBC,EAAKC,GAC7B,OAAOd,EAAkBM,OAAOE,IAAkBO,SAASF,EAAKA,EAAMC,IAY1E,IAAIE,EAAkB,EAIlBC,EAAoB,IAFoB,qBAAhBC,aAA8B,EAAIhB,EAAOC,SAAS,QAAQe,YAAcA,aAE3D,SAEnCC,EAAwD,oBAAjCF,EAAkBG,WACzC,SAAUC,EAAKC,GACjB,OAAOL,EAAkBG,WAAWC,EAAKC,IAEvC,SAAUD,EAAKC,GACjB,IAAMC,EAAMN,EAAkBO,OAAOH,GAErC,OADAC,EAAKG,IAAIF,GACF,CACHG,KAAML,EAAIzB,OACV+B,QAASJ,EAAI3B,SA0CrB,IAAIgC,EAAuB,KAC3B,SAASC,IAIL,OAH6B,OAAzBD,GAAiCA,EAAqBnB,SAAWC,IAAYD,SAC7EmB,EAAuB,IAAIE,WAAWpB,IAAYD,SAE/CmB,EAIJ,IAAMG,EAAb,6GAUQ,IAAMlB,EAAMmB,KAAKnB,IAGjB,OAFAmB,KAAKnB,IAAM,EAEJA,IAbf,6BAiBQ,IAAMA,EAAMmB,KAAKC,qBACjBvB,IAAsBG,KAlB9B,0BAsCQ,OADUH,IAAasB,KAAKnB,OArCpC,0BA6CQ,OADUH,IAAasB,KAAKnB,OA5CpC,8BAoDQ,OADUH,IAAiBsB,KAAKnB,OACjB,IApDvB,+BA2DQ,OADUH,IAAkBsB,KAAKnB,OAClB,IA3DvB,wCAkEQ,OADUH,IAA2BsB,KAAKnB,OAC3B,IAlEvB,yCAyEQ,OADUH,IAA4BsB,KAAKnB,OAC5B,IAzEvB,0BAgFQqB,EAAGC,GAEH,OADUzB,IAAesB,KAAKnB,IAAKqB,EAAGC,KAjF9C,0BAyFQD,EAAGC,EAAGC,GACN1B,IAAesB,KAAKnB,IAAKqB,EAAGC,EAAGC,KA1FvC,2BAiGSF,EAAGC,EAAGC,GACP1B,IAAgBsB,KAAKnB,IAAKqB,EAAGC,EAAGC,MAlGxC,8BAEkBvB,GACV,IAAMwB,EAAMC,OAAOC,OAAOR,EAAMS,WAGhC,OAFAH,EAAIxB,IAAMA,EAEHwB,IANf,0BA6BeH,EAAGC,EAAGM,EAAOC,EAAQC,EAAYC,GACxC,IAAI9C,EAAMY,IAAewB,EAAGC,EAAGM,EAAOC,EAAQC,EAAYC,GAC1D,OAAOb,EAAMc,OAAO/C,OA/B5B,KAuGagD,EAAb,6GAUQ,IAAMjC,EAAMmB,KAAKnB,IAGjB,OAFAmB,KAAKnB,IAAM,EAEJA,IAbf,6BAiBQ,IAAMA,EAAMmB,KAAKC,qBACjBvB,IAAwBG,KAlBhC,gCAoCcqB,EAAGC,EAAGM,EAAOC,EAAQC,EAAYI,GAEvC,OADUrC,IAAuBsB,KAAKnB,IAAKqB,EAAGC,EAAGM,EAAOC,EAAQC,EAAYI,KAC7D,IAtCvB,0BA6CQ,OADUrC,IAAesB,KAAKnB,OA5CtC,0BAoDQ,OADUH,IAAesB,KAAKnB,OAnDtC,8BA2DQ,OADUH,IAAmBsB,KAAKnB,OACnB,IA3DvB,+BAkEQ,OADUH,IAAoBsB,KAAKnB,OACpB,IAlEvB,0BA0EQqB,EAAGC,EAAGC,EAAOY,GACbtC,IAAiBsB,KAAKnB,IAAKqB,EAAGC,EAAGC,EAAOY,KA3EhD,0BAmFQd,EAAGC,EAAGa,GAEN,OADUtC,IAAiBsB,KAAKnB,IAAKqB,EAAGC,EAAGa,KApFnD,2BA6FSd,EAAGC,EAAGC,EAAOY,GACdtC,IAAkBsB,KAAKnB,IAAKqB,EAAGC,EAAGC,EAAOY,KA9FjD,kCAoGgBA,GAER,OADUtC,IAAyBsB,KAAKnB,IAAKmC,KAC9B,IAtGvB,mCA4GiBA,GAET,OADUtC,IAA0BsB,KAAKnB,IAAKmC,KAC/B,IA9GvB,4CAoH0BA,GAElB,OADUtC,IAAmCsB,KAAKnB,IAAKmC,KACxC,IAtHvB,6CA4H2BA,GAEnB,OADUtC,IAAoCsB,KAAKnB,IAAKmC,KACzC,IA9HvB,8BAoIYA,GAEJ,OADUtC,IAAqBsB,KAAKnB,IAAKmC,KArIjD,8BA4IYA,GAEJ,OADUtC,IAAqBsB,KAAKnB,IAAKmC,MA7IjD,8BAEkBnC,GACV,IAAMwB,EAAMC,OAAOC,OAAOO,EAAQN,WAGlC,OAFAH,EAAIxB,IAAMA,EAEHwB,IANf,4BAwBQ,IAAIvC,EAAMY,MACV,OAAOoC,EAAQD,OAAO/C,OAzB9B,KAkJamD,EAA6B,WAEtC,OAtUJ,SAAuBZ,GACf1C,IAAcP,EAAKQ,QAAQR,EAAKM,KAAKN,EAAKQ,OAAS,GACvD,IAAMH,EAAME,EAIZ,OAHAA,EAAYP,EAAKK,GAEjBL,EAAKK,GAAO4C,EACL5C,EAgUAyD,CADG,IAAIC,QAILC,EAA+B,SAASC,EAAMC,GACvD,IACIC,EA/SR,SAA2BlC,EAAKmC,EAAQC,GAEpC,QAAgBlE,IAAZkE,EAAuB,CACvB,IAAMlC,EAAMN,EAAkBO,OAAOH,GAC/BR,EAAM2C,EAAOjC,EAAI3B,QAGvB,OAFAY,IAAkBO,SAASF,EAAKA,EAAMU,EAAI3B,QAAQ6B,IAAIF,GACtDP,EAAkBO,EAAI3B,OACfiB,EAUX,IAPA,IAAIC,EAAMO,EAAIzB,OACViB,EAAM2C,EAAO1C,GAEX4C,EAAMlD,IAERmD,EAAS,EAENA,EAAS7C,EAAK6C,IAAU,CAC3B,IAAMC,EAAOvC,EAAIwC,WAAWF,GAC5B,GAAIC,EAAO,IAAM,MACjBF,EAAI7C,EAAM8C,GAAUC,EAGxB,GAAID,IAAW7C,EAAK,CACD,IAAX6C,IACAtC,EAAMA,EAAIyC,MAAMH,IAEpB9C,EAAM4C,EAAQ5C,EAAKC,EAAKA,EAAM6C,EAAsB,EAAbtC,EAAIzB,QAC3C,IAAM0B,EAAOd,IAAkBO,SAASF,EAAM8C,EAAQ9C,EAAMC,GAG5D6C,GAFYxC,EAAaE,EAAKC,GAEhBK,QAIlB,OADAX,EAAkB2C,EACX9C,EA4QIkD,CADDvE,EAAU8D,GAAMU,MACQtD,IAAwBA,KACtDuD,EAAOjD,EACXa,IAAkBwB,EAAO,EAAI,GAAKY,EAClCpC,IAAkBwB,EAAO,EAAI,GAAKE,GAGzBW,EAA+B,SAASb,EAAMC,GACvD,IACIa,QAAQC,MAAMxD,EAAmByC,EAAMC,IAD3C,QAGI5C,IAAqB2C,EAAMC,KAItBe,EAA6B,SAAShB,GAC/CxD,EAAWwD,IAGFiB,EAAmB,SAASjB,EAAMC,GAC3C,MAAM,IAAIH,MAAMvC,EAAmByC,EAAMC,M","file":"static/js/0.5f9a1336.chunk.js","sourcesContent":["import * as wasm from './tilemap_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport class Layer {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Layer.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_layer_free(ptr);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} width\n    * @param {number} height\n    * @param {number} tile_width\n    * @param {number} tile_height\n    * @returns {Layer}\n    */\n    static new(x, y, width, height, tile_width, tile_height) {\n        var ret = wasm.layer_new(x, y, width, height, tile_width, tile_height);\n        return Layer.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    x() {\n        var ret = wasm.layer_x(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    y() {\n        var ret = wasm.layer_y(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = wasm.layer_width(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = wasm.layer_height(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    width_in_pixels() {\n        var ret = wasm.layer_width_in_pixels(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height_in_pixels() {\n        var ret = wasm.layer_height_in_pixels(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {number}\n    */\n    get(x, y) {\n        var ret = wasm.layer_get(this.ptr, x, y);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} value\n    */\n    set(x, y, value) {\n        wasm.layer_set(this.ptr, x, y, value);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} value\n    */\n    fill(x, y, value) {\n        wasm.layer_fill(this.ptr, x, y, value);\n    }\n}\n/**\n*/\nexport class Tilemap {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Tilemap.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_tilemap_free(ptr);\n    }\n    /**\n    * @returns {Tilemap}\n    */\n    static new() {\n        var ret = wasm.tilemap_new();\n        return Tilemap.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} width\n    * @param {number} height\n    * @param {number} tile_width\n    * @param {number} tile_size\n    * @returns {number}\n    */\n    add_layer(x, y, width, height, tile_width, tile_size) {\n        var ret = wasm.tilemap_add_layer(this.ptr, x, y, width, height, tile_width, tile_size);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    x() {\n        var ret = wasm.tilemap_x(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    y() {\n        var ret = wasm.tilemap_y(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = wasm.tilemap_width(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = wasm.tilemap_height(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} value\n    * @param {number} layer_id\n    */\n    set(x, y, value, layer_id) {\n        wasm.tilemap_set(this.ptr, x, y, value, layer_id);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} layer_id\n    * @returns {number}\n    */\n    get(x, y, layer_id) {\n        var ret = wasm.tilemap_get(this.ptr, x, y, layer_id);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} value\n    * @param {number} layer_id\n    */\n    fill(x, y, value, layer_id) {\n        wasm.tilemap_fill(this.ptr, x, y, value, layer_id);\n    }\n    /**\n    * @param {number} layer_id\n    * @returns {number}\n    */\n    layer_width(layer_id) {\n        var ret = wasm.tilemap_layer_width(this.ptr, layer_id);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} layer_id\n    * @returns {number}\n    */\n    layer_height(layer_id) {\n        var ret = wasm.tilemap_layer_height(this.ptr, layer_id);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} layer_id\n    * @returns {number}\n    */\n    layer_width_in_pixels(layer_id) {\n        var ret = wasm.tilemap_layer_width_in_pixels(this.ptr, layer_id);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} layer_id\n    * @returns {number}\n    */\n    layer_height_in_pixels(layer_id) {\n        var ret = wasm.tilemap_layer_height_in_pixels(this.ptr, layer_id);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} layer_id\n    * @returns {number}\n    */\n    layer_x(layer_id) {\n        var ret = wasm.tilemap_layer_x(this.ptr, layer_id);\n        return ret;\n    }\n    /**\n    * @param {number} layer_id\n    * @returns {number}\n    */\n    layer_y(layer_id) {\n        var ret = wasm.tilemap_layer_y(this.ptr, layer_id);\n        return ret;\n    }\n}\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}